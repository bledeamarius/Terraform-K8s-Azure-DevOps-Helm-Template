# Docker image Build Pipeline
trigger:
  paths:
    exclude:
      - helm/**
      - pipelines/**

parameters:
- name: environments
  type: object
  default:
    - name: DEV
    - name: TEST
    - name: PROD

- name: UseCaseName
  type: string
  default: DEMO

variables:
  - name: imageName
    value: app-name   # <----- UPDATE

  - name: registryName
    value: project-name # <------ UPDATE
    
  - group: 'KeyVault vars'
  
  - name: DOCKER_REGISTRY_NAME
    value: $(acr-admin-loginrul)

stages:
# Build ONLY ONCE the docker image
- stage: BuildAndPushDockerImage
  displayName: 'Build and Push Docker image'
  jobs:

  - job: BuildDockerImage
    steps:
    - checkout: self
      clean: false 
            
    - task: Docker@2
      displayName: Build Docker image
      inputs:
        containerRegistry: '<AZURE_DEVOPS_SERVICE_CCONECTION_ACR>'
        command: 'build'
        repository: '$(registryName)/$(imageName)'
        tags: |
          latest
          $(Build.BuildId)
        Dockerfile: './Dockerfile'
     
    - task: Docker@2
      displayName: 'Push image to Azure Container Registry'
      inputs:
        command: 'push'
        containerRegistry: '<AZURE_DEVOPS_SERVICE_CCONECTION_ACR>'
        repository: '$(registryName)/$(imageName)'
        tags: '$(Build.BuildId)'

# Then deploy to each existing env
- ${{ each environment in parameters.environments }}:
  - template: ./stages/_deploy_component.yml
    parameters:
      TargetEnvironment: ${{ lower(environment.name) }}
      imageName: $(registryName)/$(imageName)
      UseCaseName: ${{ parameters.UseCaseName }}
      imageTag: $(Build.BuildId)
