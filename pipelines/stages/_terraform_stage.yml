parameters:
- name: AzureSubscription
  type: string

# Docs: https://developer.hashicorp.com/terraform/tutorials/automation/automate-terraform#automated-terraform-cli-workflow
- name: TerraformSteps
  type: object
  default:
  - init -input=false
  - plan -out=tfplan -input=false
  - apply -input=false tfplan

- name: Use_Case_Name
  type: string

stages:
- stage: Deploy_Terraform

  jobs:
  - deployment: Deploy_Managed_Resources_Terraform
    environment: 'MANAGED' # dummy value; not related to actual env
    strategy:
      runOnce:
        deploy:
          steps:
          # supress automatic artifact download (see below)
          - download: none

          - checkout: self
            clean: true
            persistCredentials: true
            fetchDepth: 1

          - task: AzureCLI@2
            displayName: Create Terraform State Storage
            inputs:
              azureSubscription: ${{ parameters.AzureSubscription }}
              scriptType: 'bash'
              scriptLocation: 'scriptPath'
              scriptPath: './pipelines/scripts/terraform-init-remote-state.sh'
              arguments: ${{ parameters.Use_Case_Name }}
          
          - ${{ each terraformStep in parameters.TerraformSteps }}:
            - task: AzureCLI@2
              displayName: 'Run terraform ${{ terraformStep }}'
              inputs:
                azureSubscription: ${{ parameters.AzureSubscription }}
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                addSpnToEnvironment: true # this must be set to true
                inlineScript: |
                  $env:ARM_CLIENT_ID=$env:servicePrincipalId
                  $env:ARM_CLIENT_SECRET=$env:servicePrincipalKey
                  $env:ARM_TENANT_ID=$env:tenantId
                  $env:ARM_SUBSCRIPTION_ID=$(az account show --query 'id' --output tsv)
                              
                  terraform -chdir=pipelines/terraform ${{ terraformStep }}
